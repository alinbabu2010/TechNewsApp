plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    compileSdk 33

    applicationVariants.all { variants ->
        variants.outputs.all {
            buildConfigField("String", "BASE_URL", "\"https://newsapi.org/v2/\"")
            buildConfigField("String", "API_KEY", "\"19b71eb781b0404b93feafc1badf4324\"")
        }
    }

    defaultConfig {
        applicationId "com.sample.technews"
        minSdk 27
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.4.0"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.sample.technews'
}

dependencies {

    def composeBom = platform('androidx.compose:compose-bom:2023.01.00')
    implementation composeBom
    androidTestImplementation composeBom

    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.ui:ui-tooling-preview"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.0'
    implementation 'androidx.activity:activity-compose:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'


    // Navigation compose
    implementation 'androidx.navigation:navigation-compose:2.5.3'

    //Dagger - Hilt
    kapt 'com.google.dagger:hilt-android-compiler:2.45'
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'com.google.dagger:hilt-android:2.45'
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    // Coroutine Lifecycle Scopes
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0'

    // Coil
    implementation('io.coil-kt:coil-compose:2.2.2')

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // OkHttp
    implementation('com.squareup.okhttp3:okhttp:5.0.0-alpha.7')
    implementation('com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.7')

    // JSON Converter
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Navigation animation
    implementation "com.google.accompanist:accompanist-navigation-animation:0.23.0"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // To use Kotlin annotation processing tool (kapt) MUST HAVE!
    kapt("androidx.room:room-compiler:$room_version")
    implementation "androidx.room:room-ktx:$room_version"

    // Paging Compose
    //noinspection GradleDependency
    implementation 'androidx.paging:paging-compose:1.0.0-alpha18'

}